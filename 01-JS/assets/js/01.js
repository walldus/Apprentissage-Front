// alert('WOW Tu es sur ma page');

// Deux slash pour faire un commentaire uniligne

/* 
    Ici je peux faire un commentaire sur plusieurs ligne...

    raccourci : CTRL + /
           ou : CTRL + SHIFT + /

*/

// -- 1. Declarer une variable en JS
var Prenom

// -- 2. Affecter une valeur
Prenom = "Marie-Pierre";

// --3.
console.log(Prenom);

                            /* ------------------------------------------------------
                            |            ~  LES TYPES DE VARIABLES  ~  üòÖ           |
                            ------------------------------------------------------- */


    // -- "typeof" me permet de connaitre le type de ma variable
console.log(typeof Prenom);

// -- D√©claration et affectation d'une valeur √† une variable
var Age = 22;

// -- Afficher dans la console
console.log(Age);

// -- Verifier son Type
console.log(typeof Age);

                             /* ------------------------------------------------------
                             |             ~  LA PORTE DES VARIABLES   ~     üòÖ      |
                             ------------------------------------------------------- */


    /* -- Les variables d√©clar√©es directement √† la racine du fichier son appel√©es variables "GLOBALES".

    Elles sont disponible dans l'ensemble de votre document y compris dans les fonctions / boucles.

    La port√©e des variables GLOBALES s'arr√™te au fichier. Si je change de page, les variables n'existent plus.
    
    Les variables d√©clar√©es √† l'int√©rieur d'une fonction sont appel√©es variables "LOCALES".
    
    Elles sont disponible uniquement √† l'int√©rieur de celle-ci. -- */

    // -- Les Varibles de type FLOAT 

    var uneDecimale = -2.984;
    console.log(uneDecimale);
    console.log(typeof uneDecimale);   /* Pour copier une ligne automatiquement = ALT+ SHIFT + FLECHE DU HAUT OU DU BAS */
    

    // -- Les Bool√©ens (VRAI / FAUX)

    var unBooleen = false; // -- true
    console.log(unBooleen);
    console.log(typeof unBooleen);


                            /* ------------------------------------------------------
                            |                   ~  LES CONSTANTES   ~     üòÖ        |
                            ------------------------------------------------------- */


    /*      -- La d√©claration des CONST permet de cr√©e une constante accessible Uniquement en lecture...

    Sa valeur ne pourra pas √™tre modifi√©e par des r√©affectations ult√©rieures.

    Une constante ne peut pas √™tre d√©clar√©e √† nouveau.    
    
    G√©n√©ralement par convention les contantes sont en MAJUSCULES        -- */

    const HOST = "locahost";
    const USER = "root";
    const PAW = "mysql";

    // Je ne peux pas faire cela ...
    // USER = "127.0.0.1";
    // TypeError: Assignment to constant variable

    
                            /* ------------------------------------------------------
                            |                   ~  LA MINUTE INFO  ~      üòÖ        |
                            ------------------------------------------------------- */


    /* -- Au fur et √† mesure que l'on affecte ou r√©-affecte des valeurs √† une variable, celle-ci prend la nouvelle valeur et le nouveau type.

    En Javascript (ECMA scrpit - ES), les variables sont auto-typ√©es
    
    Pour convertir une variable de type NUMER en STRING et STRIN G en NUMBER, je peux utiliser les fonctions natives de javascript  -- */

    console.log('---');

    var unNombre = "24";
    console.log(unNombre);
    console.log(typeof unNombre);

    // -- La fonction parseInt() permet de retourner un ENTIER √† partir d'un STRING 
    unNombre = parseInt(unNombre);
    console.log(unNombre);
    console.log(typeof unNombre);

    // Je r√©affecte une valeur √† ma Varible
    unNombre = "12.55";
    console.log(unNombre);
    console.log(typeof unNombre);

    // -- La fonction parseFloat() permet de retourner un FLOAT √† partir d'un STRING
    unNombre = parseFloat(unNombre);
    console.log(unNombre);
    console.log(typeof unNombre);

    // -- Conversion d'un Nombre en STRING avec toString()
    var unNombrequidevientString =10;
    console.log(unNombrequidevientString);
    console.log(typeof unNombrequidevientString);
    console.log(typeof unNombrequidevientString.toString() );
    


    
    